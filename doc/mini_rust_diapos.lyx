#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble

\usepackage{multicol} 
\end_preamble
\use_default_options false
\begin_modules
multicol
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Mini introduction to Rust
\end_layout

\begin_layout Author
Philippe Helluy, Victor Michel-Dansac
\end_layout

\begin_layout Institute
Inria Tonus
\end_layout

\begin_layout Section
A simple transport solver in Rust
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
What is Rust ?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Rust (
\begin_inset Quotes eld
\end_inset

rouille
\begin_inset Quotes erd
\end_inset

 in French) is a programming language created in 2009, using only old (rusty),
 but robust ideas.
 Some features, compared to C, C++ and Python, are: 
\end_layout

\begin_layout Itemize
no memory leak or segfault, generally guaranteed at compile time; 
\end_layout

\begin_layout Itemize
no race conditions, generally guaranteed at compile time; 
\end_layout

\begin_layout Itemize
strict ownership system, fast executable; 
\end_layout

\begin_layout Itemize
Cargo, which replaces cmake, doxygen, ctest, anaconda, etc.
 in a single utility.
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes qld
\end_inset

most loved programming language
\begin_inset Quotes qrd
\end_inset

 in the Stack Overflow Developer Survey every year since 2016.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
fragile
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Installing Rust
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Rust install with the command
\end_layout

\begin_layout Standard

\lang french
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline true
status open

\begin_layout Plain Layout

curl -$
\backslash
,$-proto '=https' -$
\backslash
,$-tlsv1.2 -sSf https://sh.rustup.rs | sh
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Create a new project
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

cargo new bonjour; cd bonjour
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Compilation and execution
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

cargo run
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Cargo is the package and compilation manager of Rust.
 The compiler is rustc.
\end_layout

\begin_layout Itemize
The source code is in src.
 Here there is a single file main.rs.
 
\end_layout

\begin_layout Itemize
The file Cargo.toml is an important config file.
 It describes the list of external libs that will be automatically downloaded
 by Cargo.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Upwind transport solver
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Transport equation at velocity 
\begin_inset Formula $c<0$
\end_inset

, with unknown 
\begin_inset Formula $u(x,t)$
\end_inset

, 
\begin_inset Formula $x\in\mathbb{R}$
\end_inset

, 
\begin_inset Formula $t\in]0,T[,$
\end_inset


\begin_inset Formula 
\[
\frac{\partial u}{\partial t}+c\frac{\partial u}{\partial x}=0,\quad u(x,0)=u^{0}(x).
\]

\end_inset

The exact solution is
\begin_inset Formula 
\[
u(x,t)=u^{0}(x-ct).
\]

\end_inset

Upwind finite difference scheme, 
\begin_inset Formula 
\[
u_{i}^{n}\simeq u(x_{i},t_{n}),\quad x_{i}=i\Delta x,\quad t_{n}=n\Delta t,
\]

\end_inset


\begin_inset Formula 
\[
\frac{u_{i}^{n+1}-u_{i}^{n}}{\Delta t}+c\frac{u_{i+1}^{n}-u_{i}^{n}}{\Delta x}=0,\quad u_{i}^{0}=u^{0}(x_{i}).
\]

\end_inset

We store 
\begin_inset Formula $u_{i}^{n}$
\end_inset

 at time 
\begin_inset Formula $n$
\end_inset

 in the array 
\begin_inset Formula $\texttt{un[i]}$
\end_inset

, 
\begin_inset Formula $\texttt{0\ensuremath{\leq}i<nx+1}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Rust code
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Variables are immutable by default.
\end_layout

\begin_layout Itemize
An object passed to a function cannot be used anymore: use reference instead.
\end_layout

\begin_layout Itemize
Only one mutable reference or several immutable references allowed at a
 time.
\end_layout

\begin_layout Itemize
The compiler messages are generally helpful.
 Cargo clippy gives hints about what can be improved.
\end_layout

\begin_layout Itemize
It is recommended to use iterators for efficient and robust programs.
 Use of two different arrays for storing 
\begin_inset Formula $u_{i}^{n}$
\end_inset

 and 
\begin_inset Formula $u_{i}^{n+1}$
\end_inset

.
\end_layout

\begin_layout Itemize
Automatic parallelism with the rayon library, without race condition.
\end_layout

\begin_layout Itemize
Source code at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/phelluy/upwind_rs
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
A more complex example: lattice Boltzmann solver
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Resolution of a PDE on a regular mesh split into 
\begin_inset Quotes eld
\end_inset

boxes
\begin_inset Quotes erd
\end_inset

.
 The computations on red boxes depend only on blue boxes and vice versa.
\end_layout

\begin_layout Itemize
Sort the array of boxes by color.
 Then 
\begin_inset Quotes eld
\end_inset

split at mut
\begin_inset Quotes erd
\end_inset

 the array: separate access to the blue and red boxes.
\end_layout

\begin_layout Itemize
Automatic parallelization, without race condition.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{multicols}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename damier-boxlab.png
	lyxscale 50
	width 90col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
columnbreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\left[\begin{array}{cc}
0\\
\vdots & \text{mutable}\\
7\\
- & \leftarrow\text{split at mut here}\\
8\\
\vdots & \text{immutable}\\
15
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{multicols}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Upwind scheme in 2D or 3D
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Dependency graph of the computations 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../patapon/mhd/doc/img_beamer/downwind_graph.png
	lyxscale 50
	width 60text%

\end_inset

 
\end_layout

\begin_layout Itemize
The solution can be explicitly computed by following a topological ordering
 of a Direct Acyclic Graph (DAG), e.g.
 3, 7, 0, 15, 1, etc.
 
\end_layout

\begin_layout Itemize
In addition there is parallelism: (3,7) can be computed in parallel, then
 (0,15,1) can be computed in parallel, etc.
 
\end_layout

\begin_layout Itemize
Low storage: the solution can be replaced in memory during the computations.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Rust implementation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
We have implemented the upwind algorithm in Rust with the 
\begin_inset Quotes eld
\end_inset

split at mut
\begin_inset Quotes erd
\end_inset

 trick.
 More details in 
\begin_inset CommandInset citation
LatexCommand cite
key "gerhard:hal-03218086"
literal "false"

\end_inset

.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../patapon/mhd/doc/img_beamer/speedup_mem.png
	width 80text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Application to an electromagnetic solver
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The transport solver is the building block of our CFL-less scheme for conservati
on laws.
 
\end_layout

\begin_layout Itemize
Unstructured mesh of the unit cube made of large and small cells.
 A small electric wire at the middle of the mesh.
\end_layout

\begin_layout Itemize
Resolution of the Maxwell equations.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename mesh-fil.png
	lyxscale 30
	width 50text%

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename resu-fil.png
	lyxscale 30
	width 80text%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Conclusion
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Practical use of Rust in a scientific computing context.
\end_layout

\begin_layout Itemize
Less bugs, which was the objective.
\end_layout

\begin_layout Itemize
Automatic, fast and robust parallelism.
\end_layout

\begin_layout Itemize
Friendly environment.
\end_layout

\begin_layout Itemize
Many other features, which we have not yet explored.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status collapsed

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Bibliography
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size tiny
 
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../patapon/mhd/doc/spring_mhd_lbm"
options "alpha"

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\end_body
\end_document
